locksmith:
  reboot_strategy: "off"
passwd:
  users:
    - name: {{ .Values.ssh.adminName }}
      ssh_authorized_keys:
      {{- range $key := .Values.ssh.adminPubkeys }}
        - "{{ $key }}"
      {{- end }}
storage:
  files:
    - path: /etc/crictl.yaml
      filesystem: root
      mode: 0600
      contents:
        inline: |
          runtime-endpoint: unix:///run/containerd/containerd.sock
          image-endpoint: unix:///run/containerd/containerd.sock
    - path: /etc/ssh/sshd_config
      filesystem: root
      mode: 0600
      contents:
        inline: |
          # Use most defaults for sshd configuration.
          Subsystem sftp internal-sftp
          ClientAliveInterval 180
          UseDNS no
          UsePAM yes
          PrintLastLog no # handled by PAM
          PrintMotd no # handled by PAM
          PermitRootLogin no
          AllowUsers {{ .Values.ssh.adminName }}
          AuthenticationMethods publickey
          TrustedUserCAKeys /etc/ssh/ca.pub
          AuthorizedPrincipalsFile /etc/ssh/auth_principals/%u
    - path: /etc/ssh/ca.pub
      filesystem: root
      mode: 0444
      contents:
        inline: |
          {{ .Values.ssh.caPub }}
    - path: /etc/ssh/auth_principals/{{ .Values.ssh.adminName }}
      filesystem: root
      mode: 0444
      contents:
        inline: |
        {{- range $ap := .Values.ssh.authPrincipals }}
          {{ $ap }}
        {{- end }}
    - path: /etc/sysctl.d/90-override.conf
      filesystem: root
      mode: 0444
      contents:
        inline: net.ipv4.conf.lxc*.rp_filter = 0
    - path: /etc/sysctl.d/99-kubernetes-cri.conf
      filesystem: root
      mode: 0444
      contents:
        inline: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    # write additional files to disk so they can be used later
    - path: /opt/bootstrap.sh
      mode: 0755
      contents:
        inline: |
{{ tpl (.Files.Get "files/bootstrap.sh") . | indent 10 }}
    {{ if .Values.installCRS.cilium -}}
    - path: /opt/default-ccnp.yaml
      mode: 0644
      contents:
        inline: |
{{ tpl (.Files.Get "files/default-ccnp.yaml") . | indent 10 }}
    {{- end }}

systemd:
  units:
    - name: kubeadm.service
      enabled: true
      dropins:
        - name: 10-flatcar.conf
          contents: |
            [Unit]
            # kubeadm must run after coreos-metadata populated /run/metadata directory.
            Requires=coreos-metadata.service
            After=coreos-metadata.service
            # kubeadm must run after containerd - see https://github.com/kubernetes-sigs/image-builder/issues/939.
            After=containerd.service
            [Service]
            # To make metadata environment variables available for pre-kubeadm commands.
            EnvironmentFile=/run/metadata/*
    - name: kubelet.service
      enabled: false
      contents: |
        [Unit]
        Description=kubelet: The Kubernetes Node Agent
        Documentation=https://kubernetes.io/docs/home/
        Wants=network-online.target
        After=network-online.target
        [Service]
        ExecStart=/opt/bin/kubelet
        Restart=always
        StartLimitInterval=0
        RestartSec=10
        [Install]
        WantedBy=multi-user.target
      dropins:
        - name: 10-kubeadm.conf
          contents: |
            # Note: This dropin only works with kubeadm and kubelet v1.11+
            [Service]
            Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
            Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
            # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
            EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
            # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
            # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
            EnvironmentFile=-/etc/default/kubelet
            ExecStart=
            ExecStart=/opt/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
    - name: systemd-networkd.service
      enabled: true
    - name: systemd-networkd-wait-online.service
      enabled: true
    - name: docker.socket
      enabled: false
      mask: true
    - name: docker.service
      enabled: false
      mask: true
    - name: containerd.service
      enabled: true
      dropins:
        - name: 10-use-custom-config.conf
          contents: |
            [Service]
            ExecStart=
            ExecStart=/usr/bin/containerd
    # TPM is disabled in the BIOS
    - name: tcsd.service
      enabled: false
      mask: true
    # Use NTP not systemd-timesyncd
    - name: systemd-timesyncd.service
      mask: true
    - name: ntpd.service
      enable: true
    - name: enable-selinux.service
      enabled: false
      contents: |
        [Unit]
        Description=Set SELinux to enforcing
        DefaultDependencies=no
        After=local-fs.target systemd-tmpfiles-setup.service
        Conflicts=shutdown.target
        Before=sysinit.target shutdown.target
        ConditionSecurity=selinux
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/sbin/setenforce 1
        [Install]
        WantedBy=multi-user.target
